// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire gen -tags "wireinject"
//go:build !wireinject
// +build !wireinject

package di

import (
	"atlas/api/app/di/provider"
	"atlas/api/infra"
	"atlas/api/repository"
	"atlas/api/resolver"
	"atlas/api/usecase"
	"atlas/config"
	"atlas/router"
	"github.com/google/wire"
)

// Injectors from wire.go:

func NewApp() (*provider.App, func(), error) {
	configConfig, err := config.NewLoadConfig()
	if err != nil {
		return nil, nil, err
	}
	ent, err := infra.NewEnt(configConfig)
	if err != nil {
		return nil, nil, err
	}
	userRepository := repository.NewUserRepository(configConfig, ent)
	userUsecase := usecase.NewUserUsecase(userRepository)
	resolverResolver := resolver.NewResolver(userUsecase)
	routerRouter := router.NewRouter(resolverResolver, configConfig)
	app := provider.NewApp(routerRouter, configConfig)
	return app, func() {
	}, nil
}

// wire.go:

var NewSet = wire.NewSet(provider.NewApp)
